{
  "projectName": "차량 정비 관리 시스템",
  "lastUpdated": "2023-04-09",
  "module": "notificationService",
  "description": "시스템 이벤트 및 사용자 알림 관리를 위한 서비스 모듈",
  "dependencies": [
    "axios",
    "socket.io-client",
    "dayjs"
  ],
  "types": {
    "NotificationType": {
      "type": "Enum",
      "values": [
        "INFO",
        "WARNING",
        "ERROR",
        "SUCCESS"
      ],
      "description": "알림 유형을 정의합니다."
    },
    "NotificationPriority": {
      "type": "Enum",
      "values": [
        "LOW",
        "MEDIUM",
        "HIGH",
        "URGENT"
      ],
      "description": "알림 우선순위를 정의합니다."
    },
    "NotificationCategory": {
      "type": "Enum",
      "values": [
        "SYSTEM",
        "MAINTENANCE",
        "VEHICLE",
        "USER",
        "SHOP",
        "PAYMENT",
        "REPORT"
      ],
      "description": "알림 카테고리를 정의합니다."
    },
    "NotificationStatus": {
      "type": "Enum",
      "values": [
        "UNREAD",
        "READ",
        "ACKNOWLEDGED",
        "ARCHIVED"
      ],
      "description": "알림 상태를 정의합니다."
    },
    "Notification": {
      "type": "Interface",
      "properties": [
        {
          "name": "id",
          "type": "string",
          "description": "알림 고유 식별자"
        },
        {
          "name": "userId",
          "type": "string",
          "description": "알림 대상 사용자 ID"
        },
        {
          "name": "title",
          "type": "string",
          "description": "알림 제목"
        },
        {
          "name": "message",
          "type": "string",
          "description": "알림 내용"
        },
        {
          "name": "type",
          "type": "NotificationType",
          "description": "알림 유형"
        },
        {
          "name": "priority",
          "type": "NotificationPriority",
          "description": "알림 우선순위"
        },
        {
          "name": "category",
          "type": "NotificationCategory",
          "description": "알림 카테고리"
        },
        {
          "name": "status",
          "type": "NotificationStatus",
          "description": "알림 상태"
        },
        {
          "name": "createdAt",
          "type": "string",
          "description": "알림 생성 시간"
        },
        {
          "name": "expiresAt",
          "type": "string",
          "optional": true,
          "description": "알림 만료 시간"
        },
        {
          "name": "readAt",
          "type": "string",
          "optional": true,
          "description": "알림을 읽은 시간"
        },
        {
          "name": "link",
          "type": "string",
          "optional": true,
          "description": "알림과 연관된 페이지 링크"
        },
        {
          "name": "data",
          "type": "any",
          "optional": true,
          "description": "알림 관련 추가 데이터"
        }
      ]
    },
    "NotificationCreate": {
      "type": "Interface",
      "properties": [
        {
          "name": "userId",
          "type": "string",
          "description": "알림 대상 사용자 ID"
        },
        {
          "name": "title",
          "type": "string",
          "description": "알림 제목"
        },
        {
          "name": "message",
          "type": "string",
          "description": "알림 내용"
        },
        {
          "name": "type",
          "type": "NotificationType",
          "description": "알림 유형"
        },
        {
          "name": "priority",
          "type": "NotificationPriority",
          "description": "알림 우선순위"
        },
        {
          "name": "category",
          "type": "NotificationCategory",
          "description": "알림 카테고리"
        },
        {
          "name": "expiresAt",
          "type": "string",
          "optional": true,
          "description": "알림 만료 시간"
        },
        {
          "name": "link",
          "type": "string",
          "optional": true,
          "description": "알림과 연관된 페이지 링크"
        },
        {
          "name": "data",
          "type": "any",
          "optional": true,
          "description": "알림 관련 추가 데이터"
        }
      ]
    },
    "NotificationUpdate": {
      "type": "Interface",
      "properties": [
        {
          "name": "status",
          "type": "NotificationStatus",
          "optional": true,
          "description": "알림 상태"
        },
        {
          "name": "readAt",
          "type": "string",
          "optional": true,
          "description": "알림을 읽은 시간"
        }
      ]
    },
    "NotificationFilter": {
      "type": "Interface",
      "properties": [
        {
          "name": "userId",
          "type": "string",
          "optional": true,
          "description": "알림 대상 사용자 ID"
        },
        {
          "name": "type",
          "type": "NotificationType",
          "optional": true,
          "description": "알림 유형"
        },
        {
          "name": "priority",
          "type": "NotificationPriority",
          "optional": true,
          "description": "알림 우선순위"
        },
        {
          "name": "category",
          "type": "NotificationCategory",
          "optional": true,
          "description": "알림 카테고리"
        },
        {
          "name": "status",
          "type": "NotificationStatus",
          "optional": true,
          "description": "알림 상태"
        },
        {
          "name": "startDate",
          "type": "string",
          "optional": true,
          "description": "알림 필터링 시작 날짜"
        },
        {
          "name": "endDate",
          "type": "string",
          "optional": true,
          "description": "알림 필터링 종료 날짜"
        },
        {
          "name": "searchTerm",
          "type": "string",
          "optional": true,
          "description": "알림 검색어"
        },
        {
          "name": "page",
          "type": "number",
          "optional": true,
          "description": "페이지 번호"
        },
        {
          "name": "limit",
          "type": "number",
          "optional": true,
          "description": "페이지당 항목 수"
        },
        {
          "name": "sortBy",
          "type": "string",
          "optional": true,
          "description": "정렬 기준"
        },
        {
          "name": "sortOrder",
          "type": "string",
          "optional": true,
          "description": "정렬 방향"
        }
      ]
    },
    "NotificationStats": {
      "type": "Interface",
      "properties": [
        {
          "name": "total",
          "type": "number",
          "description": "전체 알림 수"
        },
        {
          "name": "unread",
          "type": "number",
          "description": "읽지 않은 알림 수"
        },
        {
          "name": "byPriority",
          "type": "Record<NotificationPriority, number>",
          "description": "우선순위별 알림 수"
        },
        {
          "name": "byCategory",
          "type": "Record<NotificationCategory, number>",
          "description": "카테고리별 알림 수"
        }
      ]
    },
    "NotificationEvent": {
      "type": "Interface",
      "properties": [
        {
          "name": "event",
          "type": "string",
          "description": "이벤트 이름"
        },
        {
          "name": "notification",
          "type": "Notification",
          "description": "알림 데이터"
        },
        {
          "name": "timestamp",
          "type": "string",
          "description": "이벤트 발생 시간"
        }
      ]
    }
  },
  "services": {
    "notificationService": {
      "functions": [
        {
          "name": "getNotifications",
          "description": "사용자 알림 목록 조회",
          "params": [
            {
              "name": "filter",
              "type": "NotificationFilter",
              "optional": true
            }
          ],
          "returnType": "Promise<Notification[]>",
          "implementation": "API 호출 - GET /notifications"
        },
        {
          "name": "getNotificationById",
          "description": "특정 알림 조회",
          "params": [
            {
              "name": "notificationId",
              "type": "string"
            }
          ],
          "returnType": "Promise<Notification>",
          "implementation": "API 호출 - GET /notifications/{notificationId}"
        },
        {
          "name": "createNotification",
          "description": "새 알림 생성",
          "params": [
            {
              "name": "notificationData",
              "type": "NotificationCreate"
            }
          ],
          "returnType": "Promise<Notification>",
          "implementation": "API 호출 - POST /notifications"
        },
        {
          "name": "updateNotification",
          "description": "알림 업데이트",
          "params": [
            {
              "name": "notificationId",
              "type": "string"
            },
            {
              "name": "updateData",
              "type": "NotificationUpdate"
            }
          ],
          "returnType": "Promise<Notification>",
          "implementation": "API 호출 - PUT /notifications/{notificationId}"
        },
        {
          "name": "deleteNotification",
          "description": "알림 삭제",
          "params": [
            {
              "name": "notificationId",
              "type": "string"
            }
          ],
          "returnType": "Promise<boolean>",
          "implementation": "API 호출 - DELETE /notifications/{notificationId}"
        },
        {
          "name": "markAsRead",
          "description": "알림을 읽음으로 표시",
          "params": [
            {
              "name": "notificationId",
              "type": "string"
            }
          ],
          "returnType": "Promise<Notification>",
          "implementation": "API 호출 - PUT /notifications/{notificationId}/read"
        },
        {
          "name": "markAllAsRead",
          "description": "모든 알림을 읽음으로 표시",
          "params": [
            {
              "name": "userId",
              "type": "string"
            }
          ],
          "returnType": "Promise<boolean>",
          "implementation": "API 호출 - PUT /users/{userId}/notifications/read-all"
        },
        {
          "name": "archiveNotification",
          "description": "알림 보관 처리",
          "params": [
            {
              "name": "notificationId",
              "type": "string"
            }
          ],
          "returnType": "Promise<Notification>",
          "implementation": "API 호출 - PUT /notifications/{notificationId}/archive"
        },
        {
          "name": "getNotificationStats",
          "description": "알림 통계 조회",
          "params": [
            {
              "name": "userId",
              "type": "string"
            }
          ],
          "returnType": "Promise<NotificationStats>",
          "implementation": "API 호출 - GET /users/{userId}/notification-stats"
        },
        {
          "name": "subscribeToNotifications",
          "description": "실시간 알림 구독",
          "params": [
            {
              "name": "userId",
              "type": "string"
            },
            {
              "name": "onNotification",
              "type": "function",
              "description": "알림 수신 시 호출할 콜백 함수"
            }
          ],
          "returnType": "void",
          "implementation": "Socket.IO 연결 및 이벤트 리스너 설정"
        },
        {
          "name": "unsubscribeFromNotifications",
          "description": "실시간 알림 구독 해제",
          "params": [],
          "returnType": "void",
          "implementation": "Socket.IO 연결 종료 및 이벤트 리스너 제거"
        }
      ]
    },
    "notificationUtils": {
      "functions": [
        {
          "name": "formatNotificationDate",
          "description": "알림 날짜 포맷",
          "params": [
            {
              "name": "dateString",
              "type": "string"
            }
          ],
          "returnType": "string",
          "implementation": "dayjs를 사용하여 날짜 포맷"
        },
        {
          "name": "getNotificationIcon",
          "description": "알림 유형별 아이콘 반환",
          "params": [
            {
              "name": "type",
              "type": "NotificationType"
            }
          ],
          "returnType": "string",
          "implementation": "알림 유형에 맞는 아이콘 반환"
        },
        {
          "name": "getNotificationColor",
          "description": "알림 유형별 색상 반환",
          "params": [
            {
              "name": "type",
              "type": "NotificationType"
            }
          ],
          "returnType": "string",
          "implementation": "알림 유형에 맞는 색상 반환"
        },
        {
          "name": "getNotificationPriorityLabel",
          "description": "알림 우선순위 라벨 반환",
          "params": [
            {
              "name": "priority",
              "type": "NotificationPriority"
            }
          ],
          "returnType": "string",
          "implementation": "우선순위에 맞는 한글 라벨 반환"
        },
        {
          "name": "getNotificationSummary",
          "description": "알림 요약 정보 생성",
          "params": [
            {
              "name": "notification",
              "type": "Notification"
            }
          ],
          "returnType": "string",
          "implementation": "알림 제목과 내용을 요약하여 반환"
        }
      ]
    }
  },
  "implementation": {
    "fileStructure": [
      {
        "path": "src/types/notification.ts",
        "description": "알림 관련 타입 정의"
      },
      {
        "path": "src/services/notificationService.ts",
        "description": "알림 관련 API 서비스 함수 구현"
      },
      {
        "path": "src/utils/notificationUtils.ts",
        "description": "알림 관련 유틸리티 함수"
      },
      {
        "path": "src/contexts/NotificationContext.tsx",
        "description": "알림 관리를 위한 컨텍스트 및 프로바이더 구현"
      },
      {
        "path": "src/components/notification/NotificationBadge.tsx",
        "description": "읽지 않은 알림 개수를 표시하는 배지 컴포넌트"
      },
      {
        "path": "src/components/notification/NotificationDropdown.tsx",
        "description": "알림 목록을 표시하는 드롭다운 컴포넌트"
      },
      {
        "path": "src/components/notification/NotificationCenter.tsx",
        "description": "알림 관리 센터 컴포넌트"
      }
    ],
    "apiEndpoints": [
      {
        "path": "/notifications",
        "method": "GET",
        "description": "알림 목록 조회",
        "params": {
          "userId": "string?",
          "type": "string?",
          "priority": "string?",
          "category": "string?",
          "status": "string?",
          "startDate": "string?",
          "endDate": "string?",
          "searchTerm": "string?",
          "page": "number?",
          "limit": "number?",
          "sortBy": "string?",
          "sortOrder": "string?"
        }
      },
      {
        "path": "/notifications",
        "method": "POST",
        "description": "새 알림 생성",
        "body": "NotificationCreate"
      },
      {
        "path": "/notifications/{notificationId}",
        "method": "GET",
        "description": "특정 알림 조회"
      },
      {
        "path": "/notifications/{notificationId}",
        "method": "PUT",
        "description": "알림 업데이트",
        "body": "NotificationUpdate"
      },
      {
        "path": "/notifications/{notificationId}",
        "method": "DELETE",
        "description": "알림 삭제"
      },
      {
        "path": "/notifications/{notificationId}/read",
        "method": "PUT",
        "description": "알림을 읽음으로 표시"
      },
      {
        "path": "/notifications/{notificationId}/archive",
        "method": "PUT",
        "description": "알림 보관 처리"
      },
      {
        "path": "/users/{userId}/notifications/read-all",
        "method": "PUT",
        "description": "모든 알림을 읽음으로 표시"
      },
      {
        "path": "/users/{userId}/notification-stats",
        "method": "GET",
        "description": "알림 통계 조회"
      }
    ],
    "socketEvents": [
      {
        "event": "notification:connect",
        "direction": "client-to-server",
        "data": "{ userId: string }",
        "description": "알림 서버에 연결"
      },
      {
        "event": "notification:new",
        "direction": "server-to-client",
        "data": "NotificationEvent",
        "description": "새 알림 발생"
      },
      {
        "event": "notification:update",
        "direction": "server-to-client",
        "data": "NotificationEvent",
        "description": "알림 업데이트"
      },
      {
        "event": "notification:delete",
        "direction": "server-to-client",
        "data": "{ id: string }",
        "description": "알림 삭제"
      }
    ]
  },
  "uxFeatures": {
    "realTimeNotifications": {
      "description": "Socket.IO를 활용한 실시간 알림 수신",
      "implementation": "WebSocket 연결 및 이벤트 핸들링"
    },
    "desktopNotifications": {
      "description": "브라우저 알림 API를 활용한 데스크톱 알림",
      "implementation": "Notification API를 사용하여 OS 레벨 알림 표시"
    },
    "notificationGroups": {
      "description": "유사한 알림을 그룹화하여 표시",
      "implementation": "카테고리 및 유형별 알림 그룹화"
    },
    "priorityHandling": {
      "description": "알림 우선순위별 처리",
      "implementation": "우선순위에 따른 알림 표시 방식 차별화"
    },
    "customSounds": {
      "description": "알림 유형별 커스텀 알림음",
      "implementation": "Audio API를 사용한 알림음 재생"
    }
  }
} 