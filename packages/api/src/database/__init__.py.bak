"""
데이터베이스 모듈 초기화 및 설정
"""

import logging
from typing import Generator

from sqlalchemy import create_engine
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker, Session

from ..core.config import settings

# 로깅 설정
logger = logging.getLogger(__name__)

# 데이터베이스 연결 URL 설정
SQLALCHEMY_DATABASE_URL = settings.DATABASE_URL

# 데이터베이스 엔진 생성
try:
    engine = create_engine(
        SQLALCHEMY_DATABASE_URL,
        pool_pre_ping=True,
        pool_size=settings.DB_POOL_SIZE,
        max_overflow=settings.DB_MAX_OVERFLOW,
        connect_args=settings.DB_CONNECT_ARGS
    )
    logger.info("데이터베이스 엔진이 성공적으로 생성되었습니다.")
except Exception as e:
    logger.error("데이터베이스 엔진 생성 중 오류가 발생했습니다: %s", str(e))
    raise

# 세션 팩토리 생성
SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)

# 베이스 클래스 생성
Base = declarative_base()


def get_session() -> Session:
    """
    데이터베이스 세션을 반환합니다.
    세션은 사용 후 반드시 닫아야 합니다.
    """
    session = SessionLocal()
    try:
        return session
    except Exception as e:
        logger.error("데이터베이스 세션 생성 중 오류가 발생했습니다: %s", str(e))
        session.close()
        raise
\n