# Build stage
FROM python:3.9-slim AS builder

# Set working directory
WORKDIR /app
ARG CACHEBUST=1

# Install system dependencies and Node.js
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    libpq-dev \
    postgresql-client \
    curl \
    && curl -fsSL https://deb.nodesource.com/setup_18.x | bash - \
    && apt-get install -y nodejs \
    && rm -rf /var/lib/apt/lists/*

# Create and activate virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Install application dependencies
COPY packages/api/requirements.txt /app/requirements.txt
RUN echo "$CACHEBUST" && pip install --no-cache-dir -r requirements.txt

# Install Node.js dependencies
COPY package*.json ./
COPY packages/api/package*.json ./packages/api/
RUN npm install

# Production stage
FROM python:3.9-slim

# Create non-root user for security
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Install minimal system libraries and Node.js
RUN apt-get update && apt-get install -y --no-install-recommends \
    libpq5 \
    postgresql-client \
    curl \
    && curl -fsSL https://deb.nodesource.com/setup_18.x | bash - \
    && apt-get install -y nodejs \
    && rm -rf /var/lib/apt/lists/*

# Copy virtual environment
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Copy node_modules
COPY --from=builder /app/node_modules /app/node_modules

# Set working directory
WORKDIR /app

# Copy application code
COPY packages/api /app/
COPY packages/shared /app/packages/shared
COPY package*.json ./

# Copy start script and set permissions
COPY packages/api/start.sh /app/start.sh
RUN chmod +x /app/start.sh

# Set permissions
RUN chown -R appuser:appuser /app

# Set environment variables
ENV PYTHONPATH=/app
ENV PORT=8080
ENV HOST=0.0.0.0
ENV PYTHONUNBUFFERED=1
ENV PATH="/app/node_modules/.bin:${PATH}"

# Switch to non-root user
USER appuser

# Expose port
EXPOSE 8080

# Set healthcheck
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Run application
CMD ["/app/start.sh"]